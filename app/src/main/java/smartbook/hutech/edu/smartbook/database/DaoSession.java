package smartbook.hutech.edu.smartbook.database;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig answeredDaoConfig;
    private final DaoConfig bookmarkedDaoConfig;
    private final DaoConfig latestPageDaoConfig;

    private final AnsweredDao answeredDao;
    private final BookmarkedDao bookmarkedDao;
    private final LatestPageDao latestPageDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        answeredDaoConfig = daoConfigMap.get(AnsweredDao.class).clone();
        answeredDaoConfig.initIdentityScope(type);

        bookmarkedDaoConfig = daoConfigMap.get(BookmarkedDao.class).clone();
        bookmarkedDaoConfig.initIdentityScope(type);

        latestPageDaoConfig = daoConfigMap.get(LatestPageDao.class).clone();
        latestPageDaoConfig.initIdentityScope(type);

        answeredDao = new AnsweredDao(answeredDaoConfig, this);
        bookmarkedDao = new BookmarkedDao(bookmarkedDaoConfig, this);
        latestPageDao = new LatestPageDao(latestPageDaoConfig, this);

        registerDao(Answered.class, answeredDao);
        registerDao(Bookmarked.class, bookmarkedDao);
        registerDao(LatestPage.class, latestPageDao);
    }

    public void clear() {
        answeredDaoConfig.clearIdentityScope();
        bookmarkedDaoConfig.clearIdentityScope();
        latestPageDaoConfig.clearIdentityScope();
    }

    public AnsweredDao getAnsweredDao() {
        return answeredDao;
    }

    public BookmarkedDao getBookmarkedDao() {
        return bookmarkedDao;
    }

    public LatestPageDao getLatestPageDao() {
        return latestPageDao;
    }

}
